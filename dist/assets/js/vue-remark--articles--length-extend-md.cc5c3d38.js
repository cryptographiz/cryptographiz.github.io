(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{lEpd:function(t,a){t.exports={type:"image",mimeType:"image/svg+xml",src:"/assets/static/hashExtend.7a66ecf.c133cb686947b6d06da1ee21d55f4b6f.svg",size:{width:528,height:229},sizes:"(max-width: 528px) 100vw, 528px",srcset:["/assets/static/hashExtend.7a66ecf.c133cb686947b6d06da1ee21d55f4b6f.svg 528w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 528 229' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8e3724f8b94ada14f17437f2daf7bd75'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8e3724f8b94ada14f17437f2daf7bd75)' width='528' height='229' xlink:href='data:image/svg%2bxml%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAcCAYAAADRJblSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAJ8UlEQVRYw%2bVZSVNbyxW%2b92pmEIOYEYORsQ0YOxjww4CDjRk0YWYkgbENNgik21dCzBrAeSTkxa5kkfjFSb1KnFVS5V0qlcVbxGtvssgqlSyTTf5CFinydd%2b%2bstDj2Y8YVyWVrvqqW326%2b3af7nPO1y1BeHcShf/zVAr0AzcBJzAIjABjQBlQAUwDE4AXGAJcQA8wzvv8TyvRDNQBVyVJ%2bgR5G3DRYDBcQ14DVFMZQH9/C7iu0%2blouwHgDnAF0GmDueJ%2bwZXws9yZ8Kl1CX8aWpvs%2btNC6/9R0osXL0qPjo70tLy4uGjIlkOmSyaT5dpvW4mN5e4km5zIoU1WzKyj6fZhQPDs%2bj5ojmemBBEpNzdXouWlpSXH8vJyI3KbJocCzKi7QJuazWapsLCQtSWEVASDwTqtXUPHRfGbTnxkY4afBJ8Rv3MAC2Di5TygEMjHSSlm5bjfzPvmoI9JG8t9isXrM8rGkxrQXd3a2pp7%2bfJlTla9uLGx8fD169fpfr29vWyxe3t7pZDd/%2bNf/qRTT0DAjkne4LgENADNQBfQDdTyhYg8nwQWee4H7vHybd6eyh4BPqACGAFmgDp33C9lmsP7ko/b6g06T8BDNw2wAOcAK2y%2bmDtEW2dnJ52glfuAc01NTbU5OTklKBdzn6Gliv7%2b/q6a%2bloqKx3enu5yJQP3MSkP8AlfyDgQALxAK99diSugkiko7jvn3PWVoUx3vIDCuTtjRV4NlANUsaVUgTwvoSflNCbg4N7cDlDbbQGqADrxSSDAPfs9YBWo5aCe/iGvv8/LtwHtlHQAWzxK9AGS9sFOf590M%2bg6dtpsNaVC98Kg9OJfvxfuxCY%2b2FedhRMU%2ba5Su9JRe4dLMPDdp8qxwePTHRc7Ojry6%2bvr6cItaKMpoFCv1zcgetA2Baf9eH90TPz50ZdCob1Eb6sv02WZntD9aEik%2bUBsXPTszwlZzvVUShAz8kwcS9FotOjrBkilUnnPnz83ZI1pyvIz9HeRqJNEeNcCKKqEm1kJV6qFI3te1ZxfUNOc4pwjgP756cFNBmF4ZyYdbc404UMsl2W5wGazHZO1tbUxYSgUykM0yDzSVBnXuWnMApe5abm4SVBzWQbagSDnDMPALe6IM3ecmuUlPkY7/FFrfn5%2bJ/UrOIGmjxLr3SShHiE5IXjkOCsrilIApNsMLK8Lj8maJssDjFm718gXVs59DN3pQu48y3h9LpfR00V31MZzSVW%2bdOL83rx5Y9ZM4cOdRTyAmBlgOUW6Xk6ky%2bNkhy6ySI5E2O8psnVsDMisANuN6ampr3zj1atXusPDQ8t/Mr/qpissz7da2WmbnQ2YcNoKOTdJt3Nu%2bdIs8iuMMu5juZuvz5OYY2t1UsKVxcrUTmRXU0LBiBxn27BComyHd6Iykw3Luzgdu%2byorimyfoHE2ASj333G5FeHRsV2zxTjGPMLi7rg6ipTQF1dHXyA6mcu3LoiOnqaJUdvi9ji6hAb%2b1rFtsnetP9xhnd4vqvLUjibixwh2bRZzGKYJ8nSv08kS0wY3ldNQU40D8tJxyzZLFlTyGBEUdKOzhNJUvm13vCTYkyoB3LKHYRlZU0lMiRhgrz9lrxnXY8QW1QhjOjEFPm9Hhp8QdsAked1HjnRovYnLfjeDVXxiujdvffB8bKEE4gLQC6r21zSfIH9trynHyG7jkckFkhFw2KGn9B5SKK2OXRoeUDWpx8raxdp/SNFPQmQWyC3Xw5/L/c%2bWR8NKxHqxYWgsiZ5EtMa3bXiqDZyAmTj86hi/VOzaTN0k2QlFFAMZVbgW91QJvUvwkIkIvHjXsT7aqSonDNNWl/Fx27ksmK%2b5iowRlHgVPTbwDzQMhKftfjXV9jAWEC9d22dLSj/8QujU044vHKcOaBpsq3HDqf5fn94v8otxyu136Mkngs5DWHC9flf6ofDyXosqJjZ8UZQnXjS3%2bmM%2bxZhiyMIX0uU7iKc9bNLUXRUHFfi7NteKNJJEuy7XcEf5N%2bSU9WjZJv5nKnoAwP6uTHGQ8oqMd44mOIUfi9DwZRCuznzpFSatpnl9NnlTvh0VHt0AD3swTyYnDFXPetJ29sdkqpWT0mg2puaLJ%2boPxKHSOKcJh8iSbvqVPzVdw8GTa7Qk9IBOaXeBJd/Jw1j59TY7Ku5%2b6MWyRVO1eBEpUmR82DW8OTPX5gCPw3XDqxPFsx/ETEf56hzKnOUPy3yrh5YnPujZk9qsmLqwed6KMShNRs7WLD8HfcV//OQCZFBotHhF0d/MDz9x2/0/cpoLr9YWfgpoKfCTC9YzmzO8LOFz6QYiVYokUgx7H1iXtkYVBcYKIMHLWMXB7LViiNYTpTIfT/ZbGcLjM82upLTbGF%2byLeUsD2kRJbGyM45Lm91PWvTjYSe5ATIVvNaeLVuY3Pzpl7SXeFvCfRIX%2bTcoQfcQ7X33YQeDvYyzMprC3wpeVITWMxsE1s02W4IR2OtodXVHt63kXMNOqdmzhuKvxFnHt%2bZF4RflQgra2FJiSj5JBKxRBXl/AzZvpLZ9np0Rxwnu40bipwDm76M8gUWJmMh1e7lpGmC7Jw/iCznwBle85J4DTvCMaKaFKIK5LWxULAktr5%2by2g00onflnRSuyiJlxAbBjh56uaXL9PmWsSxSGJjDaGnLKKMrIdU8wnHa%2bTYxvng8jLdpFb0vwvi0M2Z4hjG8gM3JIPOaswxMefdF/aKJz2esBThMT4z4ThXHpDwsTpEBfvbcoqVh4NP055/SE5VqSbwW8kpJ1nZtXrI5Ukr5KXvoORpJ4s7hFRU42CLvR6GCZAEu%2bE5V76vjWUXuj5n5dKy9F0hk4xJHOb3Pstpi6dMj8JHtjVP3%2biSkzluGtIAlC3Iz1PZJNkxoFxzjEHKSZ1WN0LieShXHpcnclFHmZ/wMByViopOvl6srKyw/Cd//aegOUF825g1ln1USZh%2bffUjPORqVJiGQYSgWqCag5YreWgSgQuYWDW8O0UVUI%2bdqeJy8IDkJdRVoo0dE65EnQO/bSqP2Pv6%2b4dOpcCDwah2sqoAB8/tQLWLbU6C7XyF49LHuw%2bcLEtqOQ2FFkzETIE%2bZqqYjDEMvE6TmbTY7nrH%2bJwjHP/mymdG98qh0b38Q4P78Y8Nnjt/U5UTe8sGh6JTZ7X49AK1nRbeInGszUmpbz70zvElne6dcp1RfaXretAPpxVAmPblufa9RtfBkN61N2p2pSYLEXWsZ/n4cSrlZCnoGEZi3%2bF3dPMHf%2bvup/OU2c1xkkbzIf6E1keJDGWu4DHSmZ%2bAM0zl/Kpr5Q8i9BaXx5/c7Nxrm3gbTVaCkEY5RXHTYJvVsz9XA3ZHqWsNew1W3woLeNkGBZj%2bmxVAL0D08eI8f9lp53%2b01HLykssVcZO3a%2bB/sHTzR9qKj/3%2b92%2b20FgHt/PImQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},mLcY:function(t,a,s){"use strict";s.r(a);var e=s("KHd+"),i=(s("4l63"),s("TZCg"),s("1AHG"),s("DQNa"),s("07d7"),s("JfAA"),s("LKBx"),s("+2oP"),s("rOQg"),s("XMab"),s("kHrH"),s("moxL"),s("qXVe"),s("c162"),s("waxf"),s("0TkE"),s("Onu3"),s("1dYe"),s("gvgV"),s("6R/c"),s("YL0P"),s("X5Zq"),s("MoCz"),s("P8wP"),s("ypFw"),s("JaFt"),s("zSZm"),s("PF2M"),s("KVSy"),s("ZJ55"),s("IZzc"),s("Fwt+"),s("s5qe"),s("cvf0"),s("QWBl"),s("FZtP"),s("rB9j"),s("ALS0"),s("yq1k"),s("JTJg"),s("tkto"),{MD4:[16,function(t,a,s,e,i,n){t._md4_hash_extend(a,s,e,i,n)}],MD5:[16,function(t,a,s,e,i,n){t._md5_hash_extend(a,s,e,i,n)}]}),n={SHA256:[32,function(t,a,s,e,i,n){t._sha256_hash_extend(a,s,e,i,n)}],SHA512:[64,console.log]},l=function(t,a,s,e,i,n){if(void 0===t)return"error";var l=n[0],r=n[1];if(i.startsWith("0x")&&(i=i.slice(2)),i.length!==2*l)return"wrong input";for(var o=new Uint8Array(l),c=0;c<l;c++)o[c]=parseInt(i[2*c]+i[2*c+1],16);e=new TextEncoder("utf-8").encode(e);var h=a+s,m=t._malloc(e.length);t.HEAPU8.set(e,m);var p=t._malloc(l);t.HEAPU8.set(o,p),r(t,p,h,m,e.length);var d="";return t.HEAPU8.subarray(p,p+l).forEach((function(t){d+=t.toString(16).padStart(2,"0")})),t._free(p),t._free(m),d},r=function(t,a,s,e,r){var o=function(t){t.startsWith("0x")&&(t=t.slice(2));if(!/[0-9A-Fa-f]{6}/g.test(t)||t.length%2!=0)return[];var a=[],s=Math.floor(t.length/2);for(var e in i){i[e][0]===s&&a.push(e)}for(var l in n){n[l][0]===s&&a.push(l)}return a}(r);if(0===o.length)return[];var c=[];return o.includes("MD4")&&c.push(["MD4",l(t,a,s,e,r,i.MD4)]),o.includes("MD5")&&c.push(["MD5",l(t,a,s,e,r,i.MD5)]),o.includes("SHA256")&&c.push(["SHA256",l(t,a,s,e,r,n.SHA256)]),c},o={mounted:function(){var t=this,a=document.createElement("script");a.type="text/javascript",a.onload=function(){"undefined"!=typeof Module&&(Module.onRuntimeInitialized=function(){t.loadedWASM=!0})},a.src="/wasm/extendHshing.js",document.body.appendChild(a)},methods:{padding:function(t){if(0!=this.keyLength.length){var a=function(t,a){var s=[],e=t%64;if(e<56){s.push(128);for(var l=e+1;l<56;l++)s.push(0)}else{s.push(128);for(var r=e+1;r<64;r++)s.push(0),t+=1;for(var o=0;o<56;o++)s.push(0)}return t*=8,Object.keys(i).includes(a)?(s.push(255&t),s.push(t>>>8&255),s.push(t>>>16&255),s.push(t>>>24&255),s.push(0),s.push(0),s.push(0),s.push(0),s):Object.keys(n).includes(a)?(s.push(0),s.push(0),s.push(0),s.push(0),s.push(t>>>24&255),s.push(t>>>16&255),s.push(t>>>8&255),s.push(255&t),s):""}(parseInt(this.keyLength)+this.input.length,t);if(""===a)return"...";for(var s="",e=0;e<a.length;e++)s+="%"+a[e].toString(16).padStart(2,"0");return s}}},computed:{output:function(){var t=void 0,a=void 0;try{t=decodeURIComponent(this.input)}catch(t){return"Error in url encoding of input message"}try{a=decodeURIComponent(this.appendMessage)}catch(t){return"Error in url encoding of append message"}return this.loadedWASM?r(Module,t.length,parseInt(this.keyLength),a,this.hash):"WASM not yet loaded"}},data:function(){return{input:"Admin&false",hash:"5ed55f4f45eae63b83b0da2876997cfdbe45280587a69e29f2d5553888c62e72",appendMessage:"&viewFlag=True",keyLength:6,loadedWASM:!1}}},c=Object(e.a)(o,(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("v-container",{staticClass:"px-0"},[s("v-row",{staticClass:"py-0"},[s("v-col",{staticClass:"pb-0",attrs:{cols:"12",lg:"4"}},[s("v-text-field",{attrs:{label:"Original message (use URL encoding)",filled:""},model:{value:t.input,callback:function(a){t.input=a},expression:"input"}})],1),s("v-col",{staticClass:"pb-0",attrs:{cols:"12",lg:"8"}},[s("v-text-field",{attrs:{label:"Original hash (hexadecimal)",filled:""},model:{value:t.hash,callback:function(a){t.hash=a},expression:"hash"}})],1)],1),s("v-row",{staticClass:"py-0"},[s("v-col",{staticClass:"py-0"},[s("v-text-field",{attrs:{label:"Append message (use URL encoding)",filled:""},model:{value:t.appendMessage,callback:function(a){t.appendMessage=a},expression:"appendMessage"}})],1)],1),s("v-row",{staticClass:"py-0"},[s("v-col",{staticClass:"py-0",attrs:{cols:"12",lg:"2"}},[s("v-text-field",{staticClass:"py-0",attrs:{type:"number",label:"Key length"},model:{value:t.keyLength,callback:function(a){t.keyLength=a},expression:"keyLength"}})],1)],1),s("v-row",[s("v-col",{staticClass:"pb-0"},[s("h4",[t._v("Extended digests and inputs:")]),0!==t.output.length&&"WASM not yet loaded"!==t.output?t._l(t.output,(function(a){return s("div",{staticClass:"pt-2"},[t._v("\n            "+t._s(a[0])+"(secretKey || "),s("mark",{staticClass:"green"},[t._v('"'+t._s(t.input)+t._s(t.padding(a[0]))+t._s(t.appendMessage)+'"')]),t._v(") =  "+t._s(a[1])+"\n        ")])})):"WASM not yet loaded"===t.output?[s("p",[t._v("WASM not loaded")])]:[s("p",[t._v("Wrong input. Make sure to input a hash of the correct size.")])]],2)],1),s("v-row",[s("v-col",{staticClass:"pt-0"},[s("h4",[t._v("Note:")]),s("p",[t._v("\n        Check the length of the hash if you don't see your algorithm between the solutions. The green highlight is to indicate what to copy as input for your new extended digest.\n       ")])])],1),s("v-divider")],1)}),[],!1,null,null,null).exports,h=s("UQSp"),m=s("Kw5r");function p(t){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}m.default.config.optionMergeStrategies;var d={HashExtend:c,VueRemarkRoot:h.a},v=function(t){var a=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(d).forEach((function(t){"object"===p(d[t])&&"function"==typeof d[t].render||"function"==typeof d[t]&&"function"==typeof d[t].options.render?a[t]=d[t]:s[t]=function(){return d[t]}}))},u=m.default.config.optionMergeStrategies,g="__vueRemarkFrontMatter",f={excerpt:"Hash length extension explained.",preview_image:"/uploads/hash.png",author:"Mdb_mob_eax",title:"Hash length extension attack",published:!0,date:"2022-03-29T00:00:00.000Z"};var _=function(t){t.options[g]&&(t.options[g]=f),m.default.util.defineReactive(t.options,g,f),t.options.computed=u.computed({$frontmatter:function(){return t.options[g]}},t.options.computed)},C=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("VueRemarkRoot",[e("h1",{attrs:{id:"tool"}},[e("a",{attrs:{href:"#tool","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Tool")]),e("p",[e("strong",[t._v("You will find the explanation below the tool.")])]),e("HashExtend"),e("h1",{attrs:{id:"prerequisites"}},[e("a",{attrs:{href:"#prerequisites","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Prerequisites")]),e("p",[t._v("A cryptographic hash function is a one-way function that takes an arbitrary length input, and converts it to a fixed size output, called a digest or hash. Let "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("h")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("h")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("h")])])])]),t._v(" denote a good cryptographic hash function, then it should have the following properties:")]),e("ul",[e("li",[t._v("Be deterministic. Given the same message, it always outputs the same digest.")]),e("li",[t._v("A small change to a message must lead to entirely, uncorrelated, new digest.")]),e("li",[t._v("Collision resistance: We should not be able to easily find two different messages such that they generate the same digest: "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("h")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("m")]),e("mn",[t._v("1")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")]),e("mo",[t._v("=")]),e("mi",[t._v("h")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("m")]),e("mn",[t._v("2")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("h(m1) = h(m2)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("h")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault"},[t._v("m")]),e("span",{staticClass:"mord"},[t._v("1")]),e("span",{staticClass:"mclose"},[t._v(")")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("h")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault"},[t._v("m")]),e("span",{staticClass:"mord"},[t._v("2")]),e("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(". Note that given the nature of the hash function, these messages must exists. There is only a finite number of outputs possible, while it can have any length message. The goal is to make it very difficult to find such messages.")]),e("li",[t._v("It is resistant against second pre-image attacks: given the message "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("m")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("m")])])])]),t._v(" we cannot easily find another "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("msup",[e("mi",[t._v("m")]),e("mo",{attrs:{mathvariant:"normal",lspace:"0em",rspace:"0em"}},[t._v("′")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m'")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.751892em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("m")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.751892em"}},[e("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mtight"},[e("span",{staticClass:"mord mtight"},[t._v("′")])])])])])])])])])])])]),t._v(" such that "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("h")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("m")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")]),e("mo",[t._v("=")]),e("mi",[t._v("h")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("msup",[e("mi",[t._v("m")]),e("mo",{attrs:{mathvariant:"normal",lspace:"0em",rspace:"0em"}},[t._v("′")])],1),e("mo",{attrs:{stretchy:"false"}},[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("h(m) = h(m')")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("h")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault"},[t._v("m")]),e("span",{staticClass:"mclose"},[t._v(")")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1.001892em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("h")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("m")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.751892em"}},[e("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mtight"},[e("span",{staticClass:"mord mtight"},[t._v("′")])])])])])])])])]),e("span",{staticClass:"mclose"},[t._v(")")])])])])]),e("li",[t._v("It is resistant against pre-image attacks. Given the digest "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("d")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("d")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("d")])])])]),t._v(", one cannot easily find a message "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("m")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("m")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.43056em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("m")])])])]),t._v(" such that "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("h")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("m")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")]),e("mo",[t._v("=")]),e("mi",[t._v("d")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("h(m) = d")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("h")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault"},[t._v("m")]),e("span",{staticClass:"mclose"},[t._v(")")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("d")])])])]),t._v(".\n"),e("br"),e("br")])]),e("h2",{attrs:{id:"applications"}},[e("a",{attrs:{href:"#applications","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Applications")]),e("p",[t._v("Cryptographic hash functions are not just for checking integrity of a file after downloading.")]),e("p",[t._v("They are also used for password verification. Instead of storing passwords in a database, the hash of a password is stored. That way, leaking the hash does not automatically leak the password. (It is slightly more complicated, see "),e("a",{attrs:{href:"https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("OWASP cheat sheet for password storage")]),t._v(")")]),e("p",[t._v("Other usages are in "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Digital_signature",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("digital signatures")]),t._v(" or as "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Proof_of_work",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("proof of work")]),t._v(" for blockchains.")]),e("p",[t._v("The usage we are interested in is that of a Message Authentication Code (MAC).")]),e("h1",{attrs:{id:"attack"}},[e("a",{attrs:{href:"#attack","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Attack")]),e("p",[t._v("Given a digest of a secret key appended with a message, "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("H")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("K")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",[t._v("M")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")]),e("mo",[t._v("=")]),e("mi",[t._v("d")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("H(K || M) = d")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.08125em"}},[t._v("H")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("K")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mclose"},[t._v(")")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.69444em","vertical-align":"0em"}}),e("span",{staticClass:"mord mathdefault"},[t._v("d")])])])]),t._v(". One can generate a new hash of a new message appended to the old message, without knowing the secret key. "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[e("semantics",[e("mrow",[e("mi",[t._v("H")]),e("mo",{attrs:{stretchy:"false"}},[t._v("(")]),e("mi",[t._v("K")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",[t._v("M")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",[t._v("p")]),e("mi",[t._v("a")]),e("mi",[t._v("d")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),e("mi",[t._v("M")]),e("mn",[t._v("2")]),e("mo",{attrs:{stretchy:"false"}},[t._v(")")]),e("mo",[t._v("=")]),e("msup",[e("mi",[t._v("d")]),e("mo",{attrs:{mathvariant:"normal",lspace:"0em",rspace:"0em"}},[t._v("′")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("H(K || M || pad|| M2) = d'")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.08125em"}},[t._v("H")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.07153em"}},[t._v("K")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord mathdefault"},[t._v("p")]),e("span",{staticClass:"mord mathdefault"},[t._v("a")]),e("span",{staticClass:"mord mathdefault"},[t._v("d")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord"},[t._v("∣")]),e("span",{staticClass:"mord mathdefault",staticStyle:{"margin-right":"0.10903em"}},[t._v("M")]),e("span",{staticClass:"mord"},[t._v("2")]),e("span",{staticClass:"mclose"},[t._v(")")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),e("span",{staticClass:"base"},[e("span",{staticClass:"strut",staticStyle:{height:"0.751892em","vertical-align":"0em"}}),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathdefault"},[t._v("d")]),e("span",{staticClass:"msupsub"},[e("span",{staticClass:"vlist-t"},[e("span",{staticClass:"vlist-r"},[e("span",{staticClass:"vlist",staticStyle:{height:"0.751892em"}},[e("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[e("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),e("span",{staticClass:"sizing reset-size6 size3 mtight"},[e("span",{staticClass:"mord mtight"},[e("span",{staticClass:"mord mtight"},[t._v("′")])])])])])])])])])])])]),t._v(".")]),e("p",[t._v("The following algorithms are vulnerable:")]),e("ul",[e("li",[t._v("MD4")]),e("li",[t._v("MD5")]),e("li",[t._v("SHA-0")]),e("li",[t._v("SHA-1")]),e("li",[t._v("SHA256 and SHA512(only non truncated versions of SHA2)")]),e("li",[t._v("RIPEMD-160")]),e("li",[t._v("WHIRLPOOL")])]),e("p",[t._v("All algorithms above are based on a Merkle-Damgård construction.")]),e("g-image",{attrs:{src:s("lEpd"),alt:"Hash extend image"}}),e("p",[t._v("First, the message is split into chunks. In the example above this is 5 characters, for SHA-256 and MD5 it is 64 bytes total for one chunk. After that, the message is padded. Some algorithms also use the length of the message in the padding. For example, SHA-256 pads until it is a multiple of 56 bytes, after which the last 8 bytes are used to encode the length of the message, often in bits. Note that there is a different in endianess of the padding! SHA family uses little endian, whereas MD5 uses big endian.")]),e("p",[t._v("The original message, including padding will then be used to output the digest. We can extend said digest without knowing the actual value of the original message! We simply take the digest as state and add new data by hashing it further.")]),e("p",[t._v("When generating a new message to append, we need to know the length of the key and the message, to make sure our padding matches. This if often not known, luckily we can simply try a few different lengths and see if it works.")]),e("h1",{attrs:{id:"example"}},[e("a",{attrs:{href:"#example","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Example")]),e("p",[t._v("Let's say we get the following digest: "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("5ed55f4f45eae63b83b0da2876997cfdbe45280587a69e29f2d5553888c62e72")]),t._v(', which is the result of SHA256(secret || "Admin=false"). Suppose we didnt know the "secret", but only that it is 6 characters long and that the original data is "Admin=false".')]),e("p",[t._v('We can still calculate the hash with the append data! For example, we want to add: "&viewFlag=True". The new digest then is '),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("334d39883fb471d657d3bd8779bbc2659bd1e07964e20a8f06e3bd12490c12b1")]),t._v(".")]),e("p",[t._v("Note however, that the extra data is not directly appended, but first the padding is included. This is because the original digest is not just the result of the message, but also the padding that came after the message. If we extend with new data, we do that after the previous padding. Thus we get as input (URL encoded):\n"),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("Admin&false%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%88&viewFlag=True")])]),e("h1",{attrs:{id:"defense"}},[e("a",{attrs:{href:"#defense","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("Defense")]),e("p",[t._v("One should not use hash functions that are vulnerable to length extension attack directly as MAC. Instead, one can use "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/HMAC",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("HMAC")])])],1)}),[],!1,null,null,null);"function"==typeof v&&v(C),"function"==typeof _&&_(C);a.default=C.exports}}]);